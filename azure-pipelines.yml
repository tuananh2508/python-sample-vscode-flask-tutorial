trigger:
- main

pool:
  name: fep

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: Bash@3
      name: build
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get install python3-venv -y # If needed
          # python3 -m venv .env
          # source .env/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./requirements.txt
  - deployment: VMDeploy
    displayName: web
    dependsOn: build
    environment:
      name: dev
      resourceType: VirtualMachine
    strategy:
        rolling:
          maxParallel: 2  #for percentages, mention as x%
          preDeploy:
            steps:
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Modify deployment script based on the app type
                  echo "Starting deployment script run"
                  export set FLASK_APP=hello_app.webapp
                  python3 -m flask run --host 0.0.0.0
                  echo "Success !"
          routeTraffic:
            steps:
            - script: echo routing traffic
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success